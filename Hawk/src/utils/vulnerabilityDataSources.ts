
export interface VulnerabilitySource {
  id: string;
  name: string;
  description: string;
  enabled: boolean;
  apiEndpoint?: string;
  lastChecked?: string;
}

export const vulnerabilityDataSources: VulnerabilitySource[] = [
  {
    id: 'nvd',
    name: 'National Vulnerability Database (NVD)',
    description: 'Official US government repository of standards-based vulnerability data',
    enabled: true,
    apiEndpoint: 'https://services.nvd.nist.gov/rest/json/cves/2.0'
  },
  {
    id: 'cisa-kev',
    name: 'CISA Known Exploited Vulnerabilities',
    description: 'Catalog of vulnerabilities known to be exploited in the wild',
    enabled: true,
    apiEndpoint: 'https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json'
  },
  {
    id: 'mitre-attack',
    name: 'MITRE ATT&CK Framework',
    description: 'Knowledge base of adversary tactics and techniques',
    enabled: true
  },
  {
    id: 'exploit-db',
    name: 'Exploit Database',
    description: 'Archive of public exploits and corresponding vulnerable software',
    enabled: false // Requires special handling
  },
  {
    id: 'vulndb',
    name: 'VulnDB Community',
    description: 'Community-driven vulnerability database',
    enabled: false
  }
];

export const getEnabledSources = (): VulnerabilitySource[] => {
  return vulnerabilityDataSources.filter(source => source.enabled);
};

export const getSourceById = (id: string): VulnerabilitySource | undefined => {
  return vulnerabilityDataSources.find(source => source.id === id);
};

export const updateSourceStatus = (id: string, enabled: boolean): void => {
  const source = vulnerabilityDataSources.find(s => s.id === id);
  if (source) {
    source.enabled = enabled;
    source.lastChecked = new Date().toISOString();
  }
};
